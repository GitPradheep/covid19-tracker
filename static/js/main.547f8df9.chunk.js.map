{"version":3,"sources":["InfoBox.js","LineGraph.js","Table.js","util.js","Map.js","News.js","Whoint.js","Down.js","App.js","serviceWorker.js","index.js"],"names":["InfoBox","title","cases","total","active","isRed","props","console","log","Card","onClick","className","CardContent","Typography","color","gutterBottom","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","a","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","Table","countries","map","country","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","sortData","sortedData","sort","b","prettyPrintStat","stat","Map","center","zoom","TileLayer","url","attribution","Circle","countryInfo","lat","long","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","showDataOnMap","App","state","news","myJson","setState","this","item","img","CardActions","Button","size","href","link","React","Component","useStyles","makeStyles","root","maxWidth","ImgMediaCard","classes","CardActionArea","CardMedia","component","alt","height","src","variant","theme","icon","marginRight","spacing","heroContent","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","flexDirection","cardMedia","cardContent","flexGrow","footer","cards","desc","tit","Album","Fragment","Container","Grid","container","key","xs","sm","md","image","setInputCountry","setCountryInfo","setCountries","mapCountries","setMapCountries","tableData","setTableData","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","name","iso2","getCountriesData","onCountryChange","e","countryCode","target","width","FormControl","Select","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.547f8df9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./InfoBox.css\";\r\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\r\n  console.log(title, active);\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      }`}\r\n    >\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n          {cases}\r\n        </h2>\r\n\r\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n          Total={total}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div className=\"table\">\r\n      {countries.map((country) => (\r\n        <tr>\r\n          <td>{country.country}</td>\r\n          <td>\r\n            <strong>{numeral(country.cases).format(\"0,0\")}</strong>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(251, 68, 67, 0.5)\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  let sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React from \"react\";\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport \"./News.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      news: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://cryptic-ravine-96718.herokuapp.com/\")\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((myJson) => {\r\n        this.setState({\r\n          news: myJson.news,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.news.map((item, index, img) => {\r\n          return (\r\n            <div>\r\n              <h3>{item.title}</h3>\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"primary\" href={item.link}>\r\n                  Read More\r\n                </Button>\r\n              </CardActions>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n  },\r\n});\r\n\r\nexport default function ImgMediaCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Mask\"\r\n          height=\"200\"\r\n          src=\"https://www.who.int/images/default-source/infographics/who-emblem.png?sfvrsn=877bb56a_2\"\r\n          title=\"World Health Organization (WHO)\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            World Health Organization (WHO)\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            People and organizations who want to help fight the pandemic and\r\n            support WHO and partners can donate through the COVID-Solidarity\r\n            Response Fund.\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/donate\"\r\n        >\r\n          Donate Now\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Down.css\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst cards = [\r\n  {\r\n    img:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSXJ9FZYmy2LAVPpwczaCEwLP0pn1hbCP0RxA&usqp=CAU\",\r\n    desc: \"Wear a mask when physical distancing is not possible.\",\r\n    tit: \"Mask\",\r\n    url:\r\n      \"https://www.today.com/style/how-wear-face-mask-correctly-common-mistakes-avoid-t178177\",\r\n  },\r\n  {\r\n    img:\r\n      \"https://i.dailymail.co.uk/1s/2020/03/03/02/25459132-0-image-a-47_1583203921789.jpg\",\r\n    desc:\r\n      \"Clean your hands often. Use soap and water, or an alcohol-based hand rub.\",\r\n    tit: \"Wash your hands often.\",\r\n    url:\r\n      \"https://www.dailymail.co.uk/femail/article-8067781/Guide-washing-hands-proves-thousands-people-not-practising-good-hygiene-amid-coronavirus.html\",\r\n  },\r\n  {\r\n    img:\r\n      \"https://images.theconversation.com/files/334931/original/file-20200514-77255-kbx2n7.jpg?ixlib=rb-1.1.0&q=45&auto=format&w=1200&h=1200.0&fit=crop\",\r\n    desc: \"Maintain a safe distance from anyone who is coughing or sneezing.\",\r\n    tit: \"Social Distancing\",\r\n    url:\r\n      \"https://theconversation.com/coronavirus-and-cognitive-bias-the-surprising-reasons-people-cheat-at-social-distancing-137987\",\r\n  },\r\n  {\r\n    img:\r\n      \"https://www.lbhf.gov.uk/sites/default/files/styles/lbhf_style_s/public/covid-19-easy-read-houses.png?itok=k2lV6VCW\",\r\n    desc: \"as much as you can\",\r\n    tit: \"Stay Home,Stay Safe\",\r\n    url:\r\n      \"https://www.lbhf.gov.uk/coronavirus-covid-19/coronavirus-covid-19-easy-read/stay-home\",\r\n  },\r\n  {\r\n    img:\r\n      \"https://www.verywellhealth.com/thmb/fYTLYPLDGFXw0c9tvCkvflxHZRE=/400x250/filters:no_upscale():max_bytes(150000):strip_icc()/hispanic-girl-sneezing-in-classroom-138710775-5aec486f0e23d90037849531.jpg\",\r\n    desc:\r\n      \"Cover your nose and mouth with your bent elbow or a tissue when you cough or sneeze.\",\r\n    tit: \"Do it into your elbow or a tissue!\",\r\n    url:\r\n      \"https://www.verywellhealth.com/why-you-should-cover-your-cough-770726\",\r\n  },\r\n  {\r\n    img:\r\n      \"https://images.unsplash.com/photo-1584432810601-6c7f27d2362b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\r\n    desc:\r\n      \"If you have a fever, cough and difficulty breathing, seek medical attention.\",\r\n    tit: \"Seek Medical Attention\",\r\n    url:\r\n      \"https://news.cgtn.com/news/2020-04-12/How-to-seek-medical-advice-safely-during-the-COVID-19-outbreak--PCMDf9Pyog/index.html\",\r\n  },\r\n];\r\n\r\nexport default function Album() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main>\r\n        <div className=\"header\">\r\n          <h2>Precautions for COVID19</h2>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {cards.map((card) => (\r\n              <Grid item key={card} xs={12} sm={6} md={4}>\r\n                <Card className={classes.card}>\r\n                  <CardMedia\r\n                    className={classes.cardMedia}\r\n                    image={card.img}\r\n                    title=\"Image title\"\r\n                  />\r\n                  <CardContent className={classes.cardContent}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {card.tit}\r\n                    </Typography>\r\n                    <Typography>{card.desc}</Typography>\r\n                  </CardContent>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" href={card.url}>\r\n                      Know More\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          <CardActions>\r\n            <Button size=\"small\" color=\"primary\" href=\"https://www.who.int/\">\r\n              For more information visit www.who.int\r\n            </Button>\r\n          </CardActions>\r\n        </Container>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport numeral from \"numeral\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport News from \"./News\";\nimport Whoint from \"./Whoint\";\nimport Down from \"./Down\";\n\nconst App = () => {\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          let sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountries(data);\n          setTableData(sortedData);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  console.log(casesType);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"up\">\n        <div className=\"app__left\">\n          <div className=\"app__header\">\n            <img\n              src=\"https://image.flaticon.com/icons/svg/2947/2947656.svg\"\n              width=\"50\"\n              height=\"50\"\n            />\n            <h1>COVID-19 Tracker</h1>\n            <FormControl className=\"app__dropdown\">\n              <Select\n                variant=\"outlined\"\n                value={country}\n                onChange={onCountryChange}\n              >\n                <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n                {countries.map((country) => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <div className=\"app__stats\">\n            <InfoBox\n              onClick={(e) => setCasesType(\"cases\")}\n              title=\"Active Cases\"\n              isRed\n              active={casesType === \"cases\"}\n              cases={prettyPrintStat(countryInfo.todayCases)}\n              total={numeral(countryInfo.cases).format(\"0.0a\")}\n            />\n\n            <InfoBox\n              onClick={(e) => setCasesType(\"recovered\")}\n              title=\"Recovered\"\n              active={casesType === \"recovered\"}\n              cases={prettyPrintStat(countryInfo.todayRecovered)}\n              total={numeral(countryInfo.recovered).format(\"0.0a\")}\n            />\n            <InfoBox\n              onClick={(e) => setCasesType(\"deaths\")}\n              title=\"Deaths\"\n              isRed\n              active={casesType === \"deaths\"}\n              cases={prettyPrintStat(countryInfo.todayDeaths)}\n              total={numeral(countryInfo.deaths).format(\"0.0a\")}\n            />\n          </div>\n          <Map\n            countries={mapCountries}\n            casesType={casesType}\n            center={mapCenter}\n            zoom={mapZoom}\n          />\n\n          <Card className=\"card3\">\n            <CardContent>\n              <div className=\"new\">\n                <h1>Flash News on COVID19</h1>\n                <News />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n        <Card className=\"app__right\">\n          <CardContent>\n            <div className=\"app__information\">\n              <h3>Top Cases by Country</h3>\n              <Table countries={tableData} />\n              <h3>Worldwide New {casesType}</h3>\n              <LineGraph casesType={casesType} />\n              <div className=\"whoi\">\n                <Whoint />\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n      <div className=\"down\">\n        <Down />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}